name: CI/CD preprod

on:
  push:
    branches: [ preprod ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: triggerjenkinsjob
        uses: mickeygoussetorg/trigger-jenkins-job@v1
        with:
          jenkins-server:  "${{ secrets.JENKINS_URL }}" # URL of the jenkins server. ex: http://myjenkins.acme.com:8080
          jenkins-job: "fatboar-concours" # The name of the jenkins job to run
          jenkins-username: "${{ secrets.JENKINS_USER }}" # user name for accessing jenkins
          jenkins-pat: "${{ secrets.JENKINS_TOKEN }}" # personal Access token for accessing Jenkins
          poll-time: 10 # how often (seconds) to poll the jenkins server for results
          timeout-value: 600 # How long (seconds) to poll before timing out the action
          verbose: true # true/false - turns on extra logging

  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.ref == 'refs/heads/preprod' && contains(join(needs.tests.result, ','), 'success') }}
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/preprod.key
          chmod 600 ~/.ssh/preprod.key
          cat >>~/.ssh/config <<END
          Host preprod
            HostName $SSH_HOST
            Port $SSH_PORT
            User $SSH_USER
            IdentityFile ~/.ssh/preprod.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.PREPROD_SSH_USERNAME }}
          SSH_KEY: ${{ secrets.PREPROD_SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.PREPROD_SSH_HOST }}
          SSH_PORT: ${{ secrets.PREPROD_SSH_PORT }}
      - name: stop, update and restart api + front
        run: ssh preprod 'cd application && docker-compose stop api front && git fetch && git pull && docker-compose up -d api front'
